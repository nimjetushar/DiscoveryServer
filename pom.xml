<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.3.3.RELEASE</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>

	<modelVersion>4.0.0</modelVersion>
	<artifactId>discovery-server</artifactId>
	<groupId>com.asimio.cloud</groupId>
	<version>0-SNAPSHOT</version>
	<packaging>${packaging.type}</packaging>
	<name>DiscoveryServer</name>
	<description>Discovery Server</description>

	<scm>
		<connection>${repo.bitbucket.url}</connection>
		<developerConnection>${repo.bitbucket.url}</developerConnection>
		<url>${project.bitbucket.url}</url>
	</scm>

	<organization>
		<name>Asimio, Inc</name>
		<url>http://asimio.net/</url>
	</organization>
	<inceptionYear>2008</inceptionYear>
	<ciManagement>
		<system>jenkins</system>
		<url>http://jenkins.3velopers.net:8080/jenkins/</url>
	</ciManagement>
	<issueManagement>
		<system>Jira</system>
		<url>http://jira.3velopers.net:8080/</url>
	</issueManagement>
	<distributionManagement>
		<snapshotRepository>
			<id>nexus-snapshots</id>
			<name>Internal Snapshots</name>
			<url>http://nexus.3velopers.net:8081/nexus/content/repositories/snapshots</url>
		</snapshotRepository>
		<repository>
			<id>nexus-releases</id>
			<name>Internal Releases</name>
			<url>http://nexus.3velopers.net:8081/nexus/content/repositories/releases</url>
		</repository>
		<site>
			<id>asimio.reports.site</id>
			<url>${maven.site.url}</url>
		</site>
	</distributionManagement>

	<developers>
		<developer>
			<id>ootero</id>
			<name>Orlando L Otero</name>
			<organization>Asimio, Inc</organization>
		</developer>
	</developers>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
		<start-class>com.asimio.cloud.eureka.EurekaServerApplication</start-class>
		<packaging.type>jar</packaging.type>
		<docker.image.prefix>asimio-cloud</docker.image.prefix>

		<bitbucket.url>http://git.3velopers.net:7990</bitbucket.url>
		<project.bitbucket.url>${bitbucket.url}/projects/AC</project.bitbucket.url>
		<repo.bitbucket.url>scm:git:${bitbucket.url}/scm/ac/discoveryserver.git</repo.bitbucket.url>
		<site-url-base>http://webdav.3velopers.net/files/cloud/discovery-server</site-url-base>
		<site-connection-prefix>dav:</site-connection-prefix>
		<maven.site.url>${site-connection-prefix}${site-url-base}</maven.site.url>
		<maven.module.site.url>${maven.site.url}${project.artifactId}/</maven.module.site.url>

		<!-- Plugins -->
		<maven-clean-plugin.version>2.5</maven-clean-plugin.version>
		<maven-compiler-plugin.version>3.3</maven-compiler-plugin.version>
		<docker-maven-plugin-spotify.version>0.3.9</docker-maven-plugin-spotify.version>

		<!-- Dependencies -->
		<spring-cloud.version>Brixton.M5</spring-cloud.version>
		<undertow.version>1.3.12.Final</undertow.version>
	</properties>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-starter-parent</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-eureka-server</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-tomcat</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-undertow</artifactId>
		</dependency>
	</dependencies>

	<profiles>
		<profile>
			<id>discovery-server-war</id>
			<properties>
				<packaging.type>war</packaging.type>
			</properties>
			<dependencies>
				<dependency>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-undertow</artifactId>
					<scope>provided</scope>
				</dependency>
			</dependencies>
			<build>
				<finalName>${project.artifactId}</finalName>
				<plugins>
					<plugin>
						<groupId>org.springframework.boot</groupId>
						<artifactId>spring-boot-maven-plugin</artifactId>
					</plugin>
					<plugin>
						<artifactId>maven-clean-plugin</artifactId>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

	<build>
		<finalName>${project.artifactId}</finalName>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<requiresUnpack>
						<dependency>
							<groupId>com.netflix.eureka</groupId>
							<artifactId>eureka-core</artifactId>
						</dependency>
						<dependency>
							<groupId>com.netflix.eureka</groupId>
							<artifactId>eureka-client</artifactId>
						</dependency>
					</requiresUnpack>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven-compiler-plugin.version}</version>
				<configuration>
					<compilerArguments>
						<source>${java.version}</source>
						<target>${java.version}</target>
					</compilerArguments>
				</configuration>
			</plugin>
			<plugin>
	            <groupId>com.spotify</groupId>
	            <artifactId>docker-maven-plugin</artifactId>
	            <version>${docker-maven-plugin-spotify.version}</version>
	            <!-- Include:
	                 export DOCKER_HOST=tcp://docker:4243
                         in host executing mvn docker:build
	            -->
	            <!-- FIXME https://github.com/spotify/docker-maven-plugin#setup to push image to private registry -->
	            <configuration>
	                <imageName>${docker.image.prefix}/${project.artifactId}</imageName>
	                <dockerDirectory>src/main/docker</dockerDirectory>
	                <resources>
	                    <resource>
	                        <targetPath>/</targetPath>
	                        <directory>${project.build.directory}</directory>
	                        <include>${project.build.finalName}.jar</include>
	                    </resource>
	                </resources>
	            </configuration>
			</plugin>
		</plugins>
	</build>

</project>
